"""
Django settings for GWS project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

from dotenv import load_dotenv

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(
    os.path.dirname(os.path.abspath(__file__))
)  # call dirname() twice to get "../"

load_dotenv(f"{BASE_DIR}/.env")  # take environment variables from .env.

MODEL_STORE_DIR = "%s/DATA/MODELS/" % BASE_DIR
EARTH_STORE_DIR = "%s/DATA/EARTH/" % BASE_DIR
PALEO_STORE_DIR = "%s/DATA/PALEO/" % BASE_DIR

MODEL_DEFAULT = "SETON2012"

MEDIA_ROOT = "%s/DATA/tmp/" % BASE_DIR

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key safe!
# ************
# SEE HERE!!! best to put the SECRET_KEY in your .env file
# ************
SECRET_KEY = os.getenv("SECRET_KEY")
# alternatively, put SECRET_KEY here, but do not submit the SECRET_KEY to code repository
# SECRET_KEY = 'put your secret key here' # better not do this!!!
if not SECRET_KEY:
    raise Exception("SECRET_KEY not found!!! Check settings.py!!")


# SECURITY WARNING: don't run with debug turned on in production!
if os.getenv("DEBUG") == "true":
    DEBUG = True
else:
    DEBUG = False

ALLOWED_HOSTS = ["*"]

# if empty, there is no access control.
ACCESS_CONTROL_URL = "https://portal.gplates.org/access_control/"

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.admindocs",
    "rest_framework",
    # 'rest_framework_swagger',
    "reconstruct",
    "rotation",
    "topology",
    "earth",
    "doc",
    "info",
    "paleomap",
    "mobile",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    # 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "GWS.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "GWS.wsgi.application"


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    "default": {
        # 'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
        "ENGINE": "django.contrib.gis.db.backends.postgis",
        "NAME": os.getenv(
            "DB_NAME"
        ),  # Database name. Or path to database file if using sqlite3.
        # Database username. Not used with sqlite3.
        "USER": os.getenv("DB_USER"),
        "HOST": os.getenv("DB_HOST"),  # Database hostname
        "PASSWORD": os.getenv("DB_PASSWORD"),  # Database password for USER
        # Set to empty string for default. Not used with sqlite3.
        "PORT": "5432",
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = "/var/www/html/static/"
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_THROTTLE_CLASSES": [
        "rest_framework.throttling.AnonRateThrottle",
        "rest_framework.throttling.UserRateThrottle",
    ],
    "DEFAULT_THROTTLE_RATES": {"anon": "30/minute", "user": "1000/day"},
}
